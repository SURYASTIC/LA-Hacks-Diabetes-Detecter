# -*- coding: utf-8 -*-
"""Diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D8JWbJjMNISbY_8wHA_35S-jSczDUfuf
"""

import numpy as np
import pandas as pd
import sys

glu = sys.argv[1]
bp = sys.argv[2]
ins = sys.argv[3]
b = sys.argv[4]
dpdf = sys.argv[5]
age = sys.argv[6]

#print(glu,bp,ins,b,dpdf,age)


df=pd.read_csv('diabetes.csv')

df.head()

from sklearn.ensemble import  RandomForestClassifier

y_train = df['Outcome']
X_train = df.drop('Outcome',axis = 1)

to_d = ['SkinThickness','Pregnancies']
X_train = X_train.drop(to_d,axis=1)

clf = RandomForestClassifier(n_estimators=2000)

clf.fit(X_train,y_train)

def rf_feat_importance(m, df):
    return pd.DataFrame({'cols':df.columns, 'imp':m.feature_importances_}
                       ).sort_values('imp', ascending=False)
fi = rf_feat_importance(clf, X_train);

X_train.head()

def predict_diabetes(Glucose,BloodPressure,Insulin,BMI,DiabetesPedigreeFunction, Age):
    input = np.array([[Glucose,BloodPressure,Insulin,BMI,DiabetesPedigreeFunction, Age]]).astype(np.float64)
    prediction = clf.predict(input) 
    return prediction

print(predict_diabetes(glu,bp,ins,b,dpdf,age))
#print(glu,bp,ins,b,dpdf,age)
